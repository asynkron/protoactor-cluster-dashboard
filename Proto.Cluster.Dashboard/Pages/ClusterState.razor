@page "/clusterstate"
@using Proto.Cluster.Gossip
@inject ActorSystem System
<PageTitle>Counter</PageTitle>


<MemberSearch OnMemberSelected="MemberSelected" OnGossipState="GossipState"></MemberSearch>

 
       <MudDrawer @bind-Open="@_open" Anchor="Anchor.Right" Variant="DrawerVariant.Temporary" ClipMode="DrawerClipMode.Never" Elevation="2" Width="800px">
           @if (_state != null && _member != null)
           {
               var memberState = _state.Members[_member.Id];
               <MudDrawerHeader >
                   <MudText Color="Color.Info" Typo="Typo.h5">Member @_member.Id</MudText>
               </MudDrawerHeader>
 
               <MudTabs Rounded="false" Color="Color.Secondary">
                   <MudTabPanel Text="State">
                       <div Class="pa-4">
                           <MemberStateWidget MemberId="@_member.Id" State="@memberState"></MemberStateWidget>
                       </div>
                   </MudTabPanel>
                   <MudTabPanel Text="Actors">
                       <div Class="pa-4">
                           <MudTextField Adornment="Adornment.End"
                                         AdornmentIcon="@Icons.Filled.Search"
                                         Label="Search"
                                         Variant="Variant.Filled"
                                         @bind-Value="_search">
                           </MudTextField>
                       </div>
                   </MudTabPanel>
               </MudTabs>
   
           }
           else
           {
               <span>null data</span>
           }
       </MudDrawer>
   

@code {
    private Member? _member;
    private GossipState? _state;
    private string _search;
    private bool _open = false;

    private Task MemberSelected(Member member)
    {
        _member = member;
        _open = true;
        return Task.CompletedTask;
    }

    private Task GossipState(GossipState gossipState)
    {
        _state = gossipState;
        return Task.CompletedTask;
    }

}